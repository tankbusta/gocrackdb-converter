// Code generated by entc, DO NOT EDIT.

package task

import (
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/tankbusta/gocrackdb-converter/lib/oldschema"
)

const (
	// Label holds the string label denoting the task type in the database.
	Label = "task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldEnginePayload holds the string denoting the engine_payload field in the database.
	FieldEnginePayload = "engine_payload"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldLastUpdatedAt holds the string denoting the last_updated_at field in the database.
	FieldLastUpdatedAt = "last_updated_at"
	// FieldAssignedToHost holds the string denoting the assigned_to_host field in the database.
	FieldAssignedToHost = "assigned_to_host"
	// FieldComment holds the string denoting the comment field in the database.
	FieldComment = "comment"
	// FieldCaseCode holds the string denoting the case_code field in the database.
	FieldCaseCode = "case_code"
	// FieldNumberCracked holds the string denoting the number_cracked field in the database.
	FieldNumberCracked = "number_cracked"
	// FieldNumberPasswords holds the string denoting the number_passwords field in the database.
	FieldNumberPasswords = "number_passwords"
	// FieldError holds the string denoting the error field in the database.
	FieldError = "error"
	// EdgeCreatedBy holds the string denoting the created_by edge name in mutations.
	EdgeCreatedBy = "created_by"
	// EdgeCrackedPasswords holds the string denoting the cracked_passwords edge name in mutations.
	EdgeCrackedPasswords = "cracked_passwords"
	// Table holds the table name of the task in the database.
	Table = "tasks"
	// CreatedByTable is the table that holds the created_by relation/edge.
	CreatedByTable = "tasks"
	// CreatedByInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	CreatedByInverseTable = "users"
	// CreatedByColumn is the table column denoting the created_by relation/edge.
	CreatedByColumn = "task_created_by"
	// CrackedPasswordsTable is the table that holds the cracked_passwords relation/edge.
	CrackedPasswordsTable = "cracked_passwords"
	// CrackedPasswordsInverseTable is the table name for the CrackedPassword entity.
	// It exists in this package in order to avoid circular dependency with the "crackedpassword" package.
	CrackedPasswordsInverseTable = "cracked_passwords"
	// CrackedPasswordsColumn is the table column denoting the cracked_passwords relation/edge.
	CrackedPasswordsColumn = "task_cracked_passwords"
)

// Columns holds all SQL columns for task fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldStatus,
	FieldEnginePayload,
	FieldCreatedAt,
	FieldLastUpdatedAt,
	FieldAssignedToHost,
	FieldComment,
	FieldCaseCode,
	FieldNumberCracked,
	FieldNumberPasswords,
	FieldError,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "tasks"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"task_created_by",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultLastUpdatedAt holds the default value on creation for the "last_updated_at" field.
	DefaultLastUpdatedAt func() time.Time
	// DefaultNumberCracked holds the default value on creation for the "number_cracked" field.
	DefaultNumberCracked int
	// DefaultNumberPasswords holds the default value on creation for the "number_passwords" field.
	DefaultNumberPasswords int
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s oldschema.TaskStatus) error {
	switch s {
	case "Queued", "Dequeued", "Running", "Stopping", "Stopped", "Error", "Exhausted", "Finished":
		return nil
	default:
		return fmt.Errorf("task: invalid enum value for status field: %q", s)
	}
}
